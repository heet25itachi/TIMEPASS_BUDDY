{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/heet25itachi/ALGORITHMIC_VERSE/blob/main/relativistic%20energy%20and%20momentum%20of%20the%20accelerated%20electrons.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import logging\n",
        "from typing import Dict, Any\n",
        "\n",
        "# Configure logging\n",
        "logging.basicConfig(level=logging.INFO, format='[%(asctime)s] %(message)s')\n",
        "\n",
        "# Define fundamental physical constants\n",
        "C_LIGHT = 299792458.0        # Speed of light (m/s)\n",
        "E_MASS_KG = 9.10938356e-31   # Electron rest mass (kg)\n",
        "E_CHARGE = 1.602176634e-19   # Elementary charge (C)\n",
        "JOULES_PER_EV = 1.602176634e-19 # Conversion factor (J/eV)\n",
        "E_PERMITTIVITY = 8.854187817e-12 # Vacuum permittivity (F/m)\n",
        "\n",
        "# Convert electron rest mass to energy units (MeV)\n",
        "# E = mc^2\n",
        "E_REST_J = E_MASS_KG * C_LIGHT**2\n",
        "E_REST_MEV = (E_REST_J / JOULES_PER_EV) / 1e6\n",
        "\n",
        "# ----------------------------------------------------------------------\n",
        "# Core Relativistic Physics Functions\n",
        "# ----------------------------------------------------------------------\n",
        "\n",
        "def calculate_relativistic_properties(energy_gev: float) -> Dict[str, float]:\n",
        "    \"\"\"\n",
        "    Calculates the Lorentz factor, speed, and momentum for an electron\n",
        "    given its total energy in Giga-electron Volts (GeV).\n",
        "    \"\"\"\n",
        "    if energy_gev < (E_REST_MEV / 1000.0):\n",
        "        # Prevent calculation below rest energy\n",
        "        energy_gev = E_REST_MEV / 1000.0\n",
        "\n",
        "    energy_mev = energy_gev * 1000.0\n",
        "\n",
        "    # 1. Lorentz Factor (gamma)\n",
        "    # E = gamma * E_rest  =>  gamma = E / E_rest\n",
        "    gamma = energy_mev / E_REST_MEV\n",
        "\n",
        "    # 2. Speed (as a fraction of c, beta = v/c)\n",
        "    # gamma = 1 / sqrt(1 - beta^2)  =>  beta = sqrt(1 - 1/gamma^2)\n",
        "    if gamma <= 1:\n",
        "        beta = 0.0\n",
        "    else:\n",
        "        # Calculate beta using the relativistic formula\n",
        "        beta = np.sqrt(1.0 - (1.0 / gamma**2))\n",
        "\n",
        "    # 3. Momentum (p)\n",
        "    # p = gamma * m_e * c * beta. Momentum is usually expressed in units of MeV/c\n",
        "    momentum_mevc = gamma * E_REST_MEV * beta\n",
        "\n",
        "    return {\n",
        "        \"gamma\": gamma,\n",
        "        \"beta\": beta,\n",
        "        \"momentum_mevc\": momentum_mevc\n",
        "    }\n",
        "\n",
        "def calculate_plasma_wavelength_um(density_cm3: float) -> float:\n",
        "    \"\"\"\n",
        "    Calculates the plasma wavelength (lambda_p) in micrometers (μm)\n",
        "    for a given plasma density (n_e) in cm^-3.\n",
        "    \"\"\"\n",
        "    # Convert density from cm^-3 to m^-3\n",
        "    density_m3 = density_cm3 * 1e6\n",
        "\n",
        "    # Plasma frequency (omega_p) squared: (n_e * e^2) / (epsilon_0 * m_e)\n",
        "    omega_p_sq = (density_m3 * E_CHARGE**2) / (E_PERMITTIVITY * E_MASS_KG)\n",
        "\n",
        "    if omega_p_sq <= 0:\n",
        "        return np.nan\n",
        "\n",
        "    omega_p = np.sqrt(omega_p_sq)\n",
        "\n",
        "    # Plasma wavelength: lambda_p = 2 * pi * c / omega_p\n",
        "    lambda_p_m = (2 * np.pi * C_LIGHT) / omega_p\n",
        "\n",
        "    return lambda_p_m * 1e6 # Convert to micrometers (μm)\n",
        "\n",
        "# ----------------------------------------------------------------------\n",
        "# Neural Model Integration (Data-Driven Prediction)\n",
        "# ----------------------------------------------------------------------\n",
        "\n",
        "class MockNeuralModel:\n",
        "    \"\"\"\n",
        "    Simulates a simplified Machine Learning model that has 'learned' the\n",
        "    scaling relationship between Laser Intensity (a0) and Maximum Energy Gain\n",
        "    (E_max) in LWFA. This replaces complex physical calculations with a fast,\n",
        "    data-driven prediction based on simulated training.\n",
        "    \"\"\"\n",
        "    def __init__(self):\n",
        "        self.coefficients = None\n",
        "        self._mock_train()\n",
        "\n",
        "    def _mock_train(self):\n",
        "        \"\"\"\n",
        "        Generates a synthetic dataset based on known LWFA scaling laws\n",
        "        (E_max ~ a0^2 is often observed) and 'trains' a simple polynomial model\n",
        "        using NumPy's linear algebra solvers (simulating a learning process).\n",
        "        \"\"\"\n",
        "        logging.info(\"Training mock neural model on synthetic LWFA data...\")\n",
        "        # Input Feature: Normalized Vector Potential (a0), which relates to laser intensity\n",
        "        a0_data = np.linspace(1.5, 5.0, 50)\n",
        "\n",
        "        # Target Output: Maximum achievable electron energy (GeV)\n",
        "        # E_max_actual = A * a0^2 + B * a0 + C + Noise (simulating reality)\n",
        "        E_max_true = 0.4 * a0_data**2 + 0.5 * a0_data + 1.0 + np.random.normal(0, 0.4, 50)\n",
        "        E_max_true[E_max_true < 0] = 0.1\n",
        "\n",
        "        # Create polynomial features up to degree 2: [1, a0, a0^2]\n",
        "        # X is the design matrix for the linear system\n",
        "        X = np.vander(a0_data, N=3, increasing=True)\n",
        "\n",
        "        # Solve the normal equation (X^T X) * B = X^T Y for the coefficients B\n",
        "        XTX = X.T @ X\n",
        "        XTY = X.T @ E_max_true\n",
        "\n",
        "        # Use np.linalg.solve for robust solution of the linear system\n",
        "        self.coefficients = np.linalg.solve(XTX, XTY)\n",
        "        logging.info(f\"Mock model trained with coefficients: {self.coefficients}\")\n",
        "\n",
        "    def predict_E_max(self, a0: float) -> float:\n",
        "        \"\"\"\n",
        "        Predicts the maximum energy gain (GeV) for a given normalized vector potential (a0).\n",
        "\n",
        "        Args:\n",
        "            a0 (float): Normalized Vector Potential (a0 = eE_laser / m_e c omega_laser).\n",
        "\n",
        "        Returns:\n",
        "            float: Predicted maximum electron energy in GeV.\n",
        "        \"\"\"\n",
        "        if self.coefficients is None:\n",
        "            logging.error(\"Model not trained.\")\n",
        "            return np.nan\n",
        "\n",
        "        # Create test features: [1, a0, a0^2]\n",
        "        X_test = np.array([1.0, a0, a0**2])\n",
        "\n",
        "        # Prediction: Y = X_test @ coefficients\n",
        "        prediction = X_test @ self.coefficients\n",
        "        return max(0.0, prediction) # Energy must be non-negative\n",
        "\n",
        "# ----------------------------------------------------------------------\n",
        "# Simulation & Analysis Class\n",
        "# ----------------------------------------------------------------------\n",
        "\n",
        "class LWFA_Simulator:\n",
        "    \"\"\"\n",
        "    Main simulation class for the Laser Wakefield Accelerator, integrating\n",
        "    physics calculations and the predictive neural model.\n",
        "    \"\"\"\n",
        "    def __init__(self):\n",
        "        self.model = MockNeuralModel()\n",
        "        self.results = {}\n",
        "        logging.info(\"LWFA Simulator initialized, ready for predictive analysis.\")\n",
        "\n",
        "    def run_simulation(self, target_a0: float, target_density_cm3: float, target_energy_gev: float):\n",
        "        \"\"\"\n",
        "        Runs the full analysis, predicting E_max and calculating\n",
        "        relativistic properties for the target energy.\n",
        "        \"\"\"\n",
        "        self.results['target_a0'] = target_a0\n",
        "        self.results['target_density_cm3'] = target_density_cm3\n",
        "        self.results['target_energy_gev'] = target_energy_gev\n",
        "\n",
        "        # 1. ML Prediction: Predict the maximum energy based on laser intensity (a0)\n",
        "        predicted_e_max = self.model.predict_E_max(target_a0)\n",
        "        self.results['predicted_e_max'] = predicted_e_max\n",
        "\n",
        "        # 2. Physics Calculation: Calculate relativistic properties for the target energy\n",
        "        self.results.update(calculate_relativistic_properties(target_energy_gev))\n",
        "\n",
        "        # 3. Contextual Physics: Calculate the characteristic accelerator length\n",
        "        self.results['plasma_wavelength_um'] = calculate_plasma_wavelength_um(target_density_cm3)\n",
        "\n",
        "        self.generate_report()\n",
        "\n",
        "    def generate_report(self):\n",
        "        \"\"\"Prints a structured report of the simulation and ML prediction.\"\"\"\n",
        "\n",
        "        print(\"\\n\" + \"=\"*80)\n",
        "        print(\"    ADVANCED LWFA ELECTRON BEAM SIMULATION AND ML PREDICTION REPORT\")\n",
        "        print(\"=\"*80)\n",
        "        print(f\"Electron Rest Mass Energy ($m_e c^2$): {E_REST_MEV:.3f} MeV\")\n",
        "        print(\"-\" * 80)\n",
        "\n",
        "        # --- ML Prediction Section ---\n",
        "        print(\"\\n## A. Data-Driven Energy Prediction (Mock Neural Model)\")\n",
        "        print(\"-\" * 80)\n",
        "        print(f\"Laser Intensity Parameter ($a_0$): {self.results['target_a0']:.2f}\")\n",
        "        print(f\"Predicted Max Achievable Energy ($E_{{max}}$): {self.results['predicted_e_max']:.3f} GeV\")\n",
        "\n",
        "        e_ratio = self.results['target_energy_gev'] / self.results['predicted_e_max'] if self.results['predicted_e_max'] > 0 else 0\n",
        "\n",
        "        print(f\"Target Energy: {self.results['target_energy_gev']:.2f} GeV\")\n",
        "        print(f\"--- Required Energy is {e_ratio*100:.1f}% of Predicted Max Energy ---\")\n",
        "\n",
        "        # --- Relativistic Properties Section ---\n",
        "        print(\"\\n## B. Relativistic Properties at Target Energy\")\n",
        "        print(\"-\" * 80)\n",
        "        gamma = self.results['gamma']\n",
        "        beta = self.results['beta']\n",
        "        mom_gevc = self.results['momentum_mevc'] / 1000.0\n",
        "\n",
        "        print(f\"1. Lorentz Factor ($\\gamma$): {gamma:.0f}\")\n",
        "        print(f\"2. Electron Speed ($v/c$): {beta:.12f}\")\n",
        "        print(f\"3. Momentum ($p$): {mom_gevc:.3f} GeV/c\")\n",
        "\n",
        "        # Calculate speed difference from c (for high-level analysis)\n",
        "        speed_difference = (1.0 - beta) * C_LIGHT\n",
        "        print(f\"4. Velocity Difference from $c$: {speed_difference:.2f} m/s\")\n",
        "\n",
        "        # --- Contextual Physics Section ---\n",
        "        print(\"\\n## C. Accelerator Structure Context\")\n",
        "        print(\"-\" * 80)\n",
        "        print(f\"Plasma Density ($n_e$): $10^{{{np.log10(self.results['target_density_cm3']):.0f}}}$ cm$^{{-3}}$\")\n",
        "        print(f\"Plasma Wavelength ($\\lambda_p$): {self.results['plasma_wavelength_um']:.3f} $\\mu$m\")\n",
        "        print(\"--- (This is the size of the wakefield 'bucket' that accelerates the electrons) ---\")\n",
        "\n",
        "        print(\"\\n\" + \"=\"*80)\n",
        "\n",
        "    def plot_scaling_law(self):\n",
        "        \"\"\"Visualizes the 'learned' scaling law of the mock neural model.\"\"\"\n",
        "        try:\n",
        "            # Generate points for the learned curve\n",
        "            a0_plot = np.linspace(1.0, 6.0, 100)\n",
        "            X_plot = np.vander(a0_plot, N=3, increasing=True)\n",
        "            E_max_predicted = X_plot @ self.model.coefficients\n",
        "\n",
        "            fig, ax = plt.subplots(figsize=(10, 6))\n",
        "\n",
        "            # Plot the predicted scaling law\n",
        "            ax.plot(a0_plot, E_max_predicted, label='Model Predicted E_max Scaling', color='red', linewidth=3)\n",
        "\n",
        "            # Highlight the current simulation point\n",
        "            ax.plot(self.results['target_a0'], self.results['target_energy_gev'], 'o',\n",
        "                    label=f'Target Energy ({self.results[\"target_energy_gev\"]:.1f} GeV)',\n",
        "                    markersize=10, color='blue', markeredgecolor='white')\n",
        "\n",
        "            # Formatting\n",
        "            ax.set_title(f'ML Predicted LWFA Energy Scaling ($E_{{max}}$ vs. $a_0$) ', fontsize=16)\n",
        "            ax.set_xlabel('Normalized Vector Potential ($a_0$) - Laser Intensity Proxy', fontsize=12)\n",
        "            ax.set_ylabel('Maximum Electron Energy (GeV)', fontsize=12)\n",
        "            ax.legend()\n",
        "            ax.grid(True, linestyle='--', alpha=0.6)\n",
        "            plt.tight_layout()\n",
        "            plt.show()\n",
        "\n",
        "        except Exception as e:\n",
        "            logging.error(f\"Error during plotting: {e}. Check if matplotlib is installed.\")\n",
        "\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    # Define primary parameters for the simulation setup\n",
        "    # --- Input Parameters ---\n",
        "    TARGET_A0 = 3.5             # Normalized vector potential (laser intensity)\n",
        "    PLASMA_DENSITY_CM3 = 1e18   # Plasma density (typical LWFA density)\n",
        "    TARGET_ENERGY_GEV = 10.0    # Desired electron energy for analysis\n",
        "\n",
        "    # 1. Initialize the Advanced LWFA Simulator\n",
        "    simulator = LWFA_Simulator()\n",
        "\n",
        "    # 2. Run the Simulation and ML Prediction\n",
        "    simulator.run_simulation(\n",
        "        target_a0=TARGET_A0,\n",
        "        target_density_cm3=PLASMA_DENSITY_CM3,\n",
        "        target_energy_gev=TARGET_ENERGY_GEV\n",
        "    )\n",
        "\n",
        "    # 3. Visualize the ML Model's Learned Scaling Law\n",
        "    simulator.plot_scaling_law()\n"
      ],
      "metadata": {
        "id": "QK8Tp_sahy2y",
        "outputId": "1e4917de-6bf5-4c69-cbed-7ad58d2a1a70",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<>:205: SyntaxWarning: invalid escape sequence '\\g'\n",
            "<>:217: SyntaxWarning: invalid escape sequence '\\l'\n",
            "<>:217: SyntaxWarning: invalid escape sequence '\\m'\n",
            "<>:205: SyntaxWarning: invalid escape sequence '\\g'\n",
            "<>:217: SyntaxWarning: invalid escape sequence '\\l'\n",
            "<>:217: SyntaxWarning: invalid escape sequence '\\m'\n",
            "/tmp/ipython-input-2040442764.py:205: SyntaxWarning: invalid escape sequence '\\g'\n",
            "  print(f\"1. Lorentz Factor ($\\gamma$): {gamma:.0f}\")\n",
            "/tmp/ipython-input-2040442764.py:217: SyntaxWarning: invalid escape sequence '\\l'\n",
            "  print(f\"Plasma Wavelength ($\\lambda_p$): {self.results['plasma_wavelength_um']:.3f} $\\mu$m\")\n",
            "/tmp/ipython-input-2040442764.py:217: SyntaxWarning: invalid escape sequence '\\m'\n",
            "  print(f\"Plasma Wavelength ($\\lambda_p$): {self.results['plasma_wavelength_um']:.3f} $\\mu$m\")\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "================================================================================\n",
            "    ADVANCED LWFA ELECTRON BEAM SIMULATION AND ML PREDICTION REPORT\n",
            "================================================================================\n",
            "Electron Rest Mass Energy ($m_e c^2$): 0.511 MeV\n",
            "--------------------------------------------------------------------------------\n",
            "\n",
            "## A. Data-Driven Energy Prediction (Mock Neural Model)\n",
            "--------------------------------------------------------------------------------\n",
            "Laser Intensity Parameter ($a_0$): 3.50\n",
            "Predicted Max Achievable Energy ($E_{max}$): 7.744 GeV\n",
            "Target Energy: 10.00 GeV\n",
            "--- Required Energy is 129.1% of Predicted Max Energy ---\n",
            "\n",
            "## B. Relativistic Properties at Target Energy\n",
            "--------------------------------------------------------------------------------\n",
            "1. Lorentz Factor ($\\gamma$): 19570\n",
            "2. Electron Speed ($v/c$): 0.999999998694\n",
            "3. Momentum ($p$): 10.000 GeV/c\n",
            "4. Velocity Difference from $c$: 0.39 m/s\n",
            "\n",
            "## C. Accelerator Structure Context\n",
            "--------------------------------------------------------------------------------\n",
            "Plasma Density ($n_e$): $10^{18}$ cm$^{-3}$\n",
            "Plasma Wavelength ($\\lambda_p$): 33.389 $\\mu$m\n",
            "--- (This is the size of the wakefield 'bucket' that accelerates the electrons) ---\n",
            "\n",
            "================================================================================\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "name": "Welcome To Colab",
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
